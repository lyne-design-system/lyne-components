@use '../../core/styles' as sbb;

// Box-sizing rules contained in typography are not traversing Shadow DOM boundaries. We need to include box-sizing mixin in every component.
@include sbb.box-sizing;

:host {
  --sbb-tab-title-height: var(--sbb-size-element-m);
  --sbb-tab-title-color: var(--sbb-color-granite);
  --sbb-tab-title-icon-color: var(--sbb-color-black);
  --sbb-tab-title-background-color: var(--sbb-color-white);
  --sbb-tab-title-cursor: pointer;
  --sbb-tab-title-pointer-events: unset;
  --sbb-tab-title-inset: 0;
  --sbb-tab-title-inline-padding: var(--sbb-spacing-responsive-xs);
  --sbb-tab-title-marker-transform: scale(0);
  --sbb-tab-title-text-decoration: none;
  --sbb-tab-title-animation-duration: var(
    --sbb-disable-animation-zero-time,
    var(--sbb-animation-duration-2x)
  );
  --sbb-tab-title-animation-easing: var(--sbb-animation-easing);
  --sbb-tab-title-amount-color: var(--sbb-color-metal);

  display: inline-block;
  max-width: 100%;
  pointer-events: var(--sbb-tab-title-pointer-events);
  -webkit-tap-highlight-color: transparent;

  // Use !important here to not interfere with Firefox focus ring definition
  // which appears in normalize css of several frameworks.
  outline: none !important;

  @include sbb.if-forced-colors {
    --sbb-tab-title-color: ButtonText;
    --sbb-tab-title-icon-color: ButtonText;
    --sbb-tab-title-amount-color: ButtonText;
  }
}

:host([data-size='s']) {
  --sbb-tab-title-height: var(--sbb-size-element-xs);
  --sbb-tab-title-inline-padding: var(--sbb-spacing-responsive-xxxs);
}

:host([disabled]) {
  --sbb-tab-title-icon-color: var(--sbb-color-granite);
  --sbb-tab-title-background-color: var(--sbb-color-milk);
  --sbb-tab-title-cursor: unset;
  --sbb-tab-title-pointer-events: none;
  --sbb-tab-title-text-decoration: line-through;

  @include sbb.if-forced-colors {
    --sbb-tab-title-color: GrayText;
    --sbb-tab-title-icon-color: GrayText;
    --sbb-tab-title-amount-color: GrayText;
  }
}

// If active and not disabled
:host([active]:not([disabled])) {
  --sbb-tab-title-color: var(--sbb-color-charcoal);
  --sbb-tab-title-icon-color: var(--sbb-tab-title-color);
  --sbb-tab-title-background-color: var(--sbb-color-black);
  --sbb-tab-title-cursor: unset;
  --sbb-tab-title-pointer-events: none;
  --sbb-tab-title-marker-transform: scale(1);

  @include sbb.if-forced-colors {
    --sbb-tab-title-color: ButtonText;
    --sbb-tab-title-icon-color: ButtonText;
    --sbb-tab-title-amount-color: ButtonText;
  }
}

:host(:hover:not([disabled])) {
  @include sbb.hover-mq($hover: true) {
    --sbb-tab-title-marker-transform: scale(1);
  }
}

// Pressed/active state
:host(:is([data-active], :active)) {
  --sbb-tab-title-color: var(--sbb-color-charcoal);
}

.sbb-tab-title__wrapper {
  position: relative;

  // Hide focus outline when focus origin is mouse or touch. This is being used as a workaround in various components.
  :host(:focus-visible:not([data-focus-origin='mouse'], [data-focus-origin='touch'])) & {
    &::before {
      content: '';
      position: absolute;
      display: block;
      inset: calc((var(--sbb-focus-outline-width) + var(--sbb-focus-outline-offset)) * -1);
      border: var(--sbb-focus-outline-width) solid var(--sbb-focus-outline-color);
      border-radius: var(--sbb-border-radius-2x);
      z-index: 1;
    }
  }
}

.sbb-tab-title {
  position: relative;
  margin: 0;
  min-height: var(--sbb-tab-title-height);
  display: flex;
  align-items: center;
  padding-inline: var(--sbb-tab-title-inline-padding);
  gap: var(--sbb-spacing-fixed-2x);
  user-select: none;
  cursor: var(--sbb-tab-title-cursor);
  transition: color var(--sbb-tab-title-animation-duration) var(--sbb-tab-title-animation-easing);
  color: var(--sbb-tab-title-icon-color);

  // Show a border under the tab-group and between flex rows when the tab titles wrap to a new line
  :host([data-has-divider]) & {
    &::after {
      content: '';
      position: absolute;
      inset-inline-start: 0;
      inset-block-end: 0;
      width: var(--sbb-tab-group-width);
      height: var(--sbb-border-width-1x);
      background-color: var(--sbb-color-cloud);
    }
  }

  &::before {
    position: absolute;
    content: '';
    inset-inline: 0;
    inset-block-end: 0;
    height: #{sbb.px-to-rem-build(3)};
    background-color: var(--sbb-tab-title-color);
    transform: var(--sbb-tab-title-marker-transform);
    transition: {
      duration: var(--sbb-tab-title-animation-duration);
      timing-function: var(--sbb-tab-title-animation-easing);
      property: transform, background-color;
    }

    z-index: 1;
  }
}

.sbb-tab-title__icon,
.sbb-tab-title__text,
.sbb-tab-title__amount {
  text-decoration: var(--sbb-tab-title-text-decoration);
}

.sbb-tab-title__icon {
  display: flex;
  flex-shrink: 0;
  color: var(--sbb-tab-title-color);
  transition: color var(--sbb-tab-title-animation-duration) var(--sbb-tab-title-animation-easing);

  :host(:not([data-slot-names~='icon'], [icon-name])) & {
    display: none;
  }
}

.sbb-tab-title__text {
  @include sbb.text-m--bold;
  @include sbb.font-smoothing;
  @include sbb.ellipsis;

  :host([data-size='s']) & {
    @include sbb.text-s--bold;
  }

  :host([data-size='xl']) & {
    @include sbb.text-xl--bold;
  }

  color: var(--sbb-tab-title-color);
  transition: color var(--sbb-tab-title-animation-duration) var(--sbb-tab-title-animation-easing);
}

.sbb-tab-title__amount {
  @include sbb.text-m--regular;
  @include sbb.font-smoothing;

  :host(:not([data-slot-names~='amount'], [amount])) & {
    display: none;
  }

  :host([data-size='s']) & {
    @include sbb.text-s--regular;
  }

  :host([data-size='xl']) & {
    @include sbb.text-xl--regular;
  }

  display: flex;
  color: var(--sbb-tab-title-amount-color);
  transition: color var(--sbb-tab-title-animation-duration) var(--sbb-tab-title-animation-easing);
}
