@use '../../core/styles' as sbb;

// Box-sizing rules contained in typography are not traversing Shadow DOM boundaries. We need to include box-sizing mixin in every component.
@include sbb.box-sizing;

:host {
  --sbb-train-formation-inline-padding: var(--sbb-spacing-fixed-4x);
  --sbb-train-formation-background-color: var(--sbb-color-white);
  --sbb-train-formation-sector-label-color: var(--sbb-color-metal);
  --sbb-train-formation-sector-line-color: var(--sbb-color-smoke);
  --sbb-train-formation-blocked-passage-width: #{sbb.px-to-rem-build(16)};

  @include sbb.if-forced-colors {
    --sbb-train-formation-sector-line-color: CanvasText;
  }

  display: block;
}

:host([hide-wagon-label]) {
  --sbb-train-formation-wagon-label-display: none;
}

.sbb-train-formation {
  @include sbb.scrollbar;

  display: grid;
  grid-template:
    'start sectors end' auto
    'start trains end' auto / auto 1fr auto;
  position: relative;
  overflow-x: auto;
  background-color: var(--sbb-train-formation-background-color);

  // Enable inline padding
  &::before,
  &::after {
    content: '';
    display: block;
    width: var(--sbb-train-formation-inline-padding);
    background-color: var(--sbb-train-formation-background-color);
  }

  &::before {
    grid-area: start;
  }

  &::after {
    grid-area: end;
  }
}

.sbb-train-formation__sectors {
  display: flex;
  grid-area: sectors;
  gap: var(--sbb-train-formation-wagon-gap);
}

.sbb-train-formation__sector {
  --_wagon-sum: var(--sbb-train-formation-wagon-count) * var(--sbb-train-formation-wagon-width);
  --_blocked-passage-sum: var(--sbb-train-formation-wagon-blocked-passage-count) *
    var(--sbb-train-formation-blocked-passage-width);
  --_total-count: calc(
    var(--sbb-train-formation-wagon-count) + var(--sbb-train-formation-wagon-blocked-passage-count)
  );
  --_gap-sum: calc((var(--_total-count) - 1) * var(--sbb-train-formation-wagon-gap));
  --_sector-width: calc(var(--_wagon-sum) + var(--_blocked-passage-sum) + var(--_gap-sum));

  @include sbb.text-s--regular;

  flex: 0 0 var(--_sector-width);
  color: var(--sbb-train-formation-sector-label-color);
  text-align: center;
  position: relative;
  display: inline-block;
  margin-block-end: var(--sbb-spacing-fixed-4x);
  max-width: var(--_sector-width);

  // Line behind the sector-label
  &::before {
    content: '';
    position: absolute;
    inset: 50% 0;
    height: 1px;
    background-color: var(--sbb-train-formation-sector-line-color);
  }
}

.sbb-train-formation__sector-sticky-wrapper {
  background-color: var(--sbb-train-formation-background-color);
  position: sticky;
  inset: auto 0;
  padding: 0 var(--sbb-spacing-fixed-1x);
  margin: 0 var(--sbb-spacing-fixed-2x);
  overflow: hidden;
  white-space: nowrap;
}

.sbb-train-formation__trains {
  grid-area: trains;
}

.sbb-train-formation__train-list {
  @include sbb.list-reset;

  display: flex;
  gap: var(--sbb-train-formation-wagon-gap);
}

// Using ... li selector, because the li generation
// is handled in the component base class.
.sbb-train-formation__train-list > :is(li, span) {
  display: inline-flex;
}
