@use '../../core/styles' as sbb;

// Box-sizing rules contained in typography are not traversing Shadow DOM boundaries. We need to include box-sizing mixin in every component.
@include sbb.box-sizing;

:host {
  --sbb-train-direction-spacing: var(--sbb-spacing-fixed-4x);
  --sbb-train-direction-label-padding: var(--sbb-spacing-fixed-1x);
  --sbb-train-direction-station-padding: var(--sbb-spacing-fixed-3x);
  --sbb-train-direction-line-width: var(--sbb-border-width-1x);
  --sbb-train-direction-line-color: var(--sbb-color-smoke);
  --sbb-train-direction-label-color: var(--sbb-color-metal);
  --sbb-train-direction-label-background: var(--sbb-color-white);

  // Static value from design specs
  --sbb-train-direction-indicator-end-height: #{sbb.px-to-rem-build(12)};

  // Evaluate offset for the arrow-icon because 50% offset will cause a cut off of
  // the arrow-top on the overflowing edge
  --sbb-train-direction-indicator-arrow-offset-end: #{sbb.px-to-rem-build(9)};
  --sbb-train-direction-indicator-arrow-offset-start: calc(
    var(--sbb-train-direction-indicator-arrow-offset-end) * -1
  );

  @include sbb.if-forced-colors {
    --sbb-train-direction-line-color: CanvasText;
  }

  display: block;
}

.sbb-train {
  display: flex;
  flex-direction: column;
  position: relative;
  height: 100%;
}

.sbb-train__wagons {
  @include sbb.list-reset;

  display: flex;
  gap: var(--sbb-train-formation-wagon-gap);
}

.sbb-train__direction {
  @include sbb.text-s--regular;

  padding-block-start: var(--sbb-train-direction-spacing);
  margin-block: auto var(--sbb-train-direction-spacing);
  display: flex;
  position: relative;
  width: 100%;
}

.sbb-train__direction-heading {
  z-index: 1;
  display: flex;
  position: sticky;
  inset: auto 0;
  flex-direction: column;
  width: 100%;
  max-width: var(--sbb-train-direction-width);
  margin: 0;
  color: var(--sbb-train-direction-label-color);
  font-size: inherit;
  font-weight: inherit;
}

.sbb-train__direction-indicator {
  z-index: 0;
  position: absolute;
  top: calc(((0.5em * var(--sbb-typo-line-height-body-text))) + var(--sbb-train-direction-spacing));
  inset-inline: 0;
  height: var(--sbb-train-direction-line-width);
  background-color: var(--sbb-train-direction-line-color);
}

.sbb-train__direction-arrow {
  color: var(--sbb-train-direction-line-color);

  :host([direction='right']) & {
    transform: translateX(var(--sbb-train-direction-indicator-arrow-offset-end));
    order: 1;
  }

  :host([direction='left']) & {
    transform: translateX(var(--sbb-train-direction-indicator-arrow-offset-start));
  }
}

.sbb-train__sticky-wrapper {
  position: sticky;
  inset: auto 0;
  width: 100%;
  max-width: var(--sbb-train-direction-width);
  height: var(--sbb-train-direction-line-width);
  display: flex;
  align-items: center;
  justify-content: space-between;

  // Direction indicator end-shape
  &::after {
    content: '';
    width: var(--sbb-train-direction-line-width);
    height: var(--sbb-train-direction-indicator-end-height);
    background-color: var(--sbb-train-direction-line-color);
    display: block;
  }
}

.sbb-train__direction-label,
.sbb-train__direction-station {
  margin: 0 auto;
}

.sbb-train__direction-label {
  padding: 0 var(--sbb-train-direction-label-padding);
  background-color: var(--sbb-train-direction-label-background);
}

.sbb-train__direction-station {
  @include sbb.text-xxs--regular;

  max-width: 100%;
  text-overflow: ellipsis;
  overflow: hidden;
  padding: 0 var(--sbb-train-direction-station-padding);
}

.sbb-train__direction-label-sr {
  @include sbb.screen-reader-only;
}
